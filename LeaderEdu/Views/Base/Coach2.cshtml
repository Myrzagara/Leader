@model ModelMixForCoach
<p>Base</p>

<form asp-action="Logout" asp-controller="Home">
    
            <input type="submit" value="Выйти" class="btn btn-outline-dark" />
      
</form>
<div id="dvCategoryResults">
    @{await Html.RenderPartialAsync("PartialQuestionnaire", Model.questionnaireLeader);}
</div>
<input type='button' id="AddQues" value='Анкета' />
<div id="datetimepickerCoach"></div>
<input type='button' id="addCoachTime" value='Добавить' />
<input id="time" type="text" value="" />
<table border="1">
    <tr>
        <td><input type="button" class="btn btn-outline-success" value="08:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="09:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="10:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="11:00" /></td>
    </tr>
    <tr>
        <td><input type="button" class="btn btn-outline-success" value="12:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="13:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="14:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="15:00" /></td>
    </tr>
    <tr>
        <td><input type="button" class="btn btn-outline-success" value="16:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="17:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="18:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="19:00" /></td>
    </tr>
    <tr>
        <td><input type="button" class="btn btn-outline-success" value="20:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="21:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="22:00" /></td>
        <td><input type="button" class="btn btn-outline-success" value="23:00" /></td>
    </tr>

</table>
<div id="results"></div>
<div id="dvCategoryResults">
    @{await Html.RenderPartialAsync("PartialEduTimes", Model);}
</div>


@section Scripts {
    <script>
        $(function () {

            $('.btn').prop("disabled", false);

            $('#datetimepickerCoach').datepicker({
                inline: true,
                altField: '#d',
                onSelect: onDateChange,
                changeMonth: false,
                changeYear: false,
                stepMonths: false,
            });
            function onDateChange(dateText, inst) {
                UpdateTime(dateText);
            }
        });

       function UpdateTime(dateText){
            var settings = {
                "url": "/Base/GetDisableTimesForCoach",
                "method": "POST",
                "timeout": 0,
                "headers": {
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                "data": {
                    "BeginDate": dateText
                }
            };

            $.ajax(settings).done(function (response) {

                $('.btn').prop("disabled", false);


                for (var i = 0; i < response.length; i++) {

                    $('input[type="button"][value="' + response[i] + '"]').prop("disabled", true);
                }
            });

        };



        $(document).ready(function () {
            $('#dvCategoryResults').hide();
           

            $('#AddQues').click(function (e) {
                e.preventDefault();
                $('#dvCategoryResults').toggle('show');

            });
          
                var AddTime = '@Model.AddTime';
            if (AddTime) {
                $('#addCoachTime').hide();
            };



            $('#addCoachTime').click(function (e) {
                e.preventDefault();
                var date = $("#datetimepickerCoach").val();

                var time = $("#time").val();

                let bd = new Date(date + " " + time + ' UTC').toISOString();
                if (time != "") {
                    var settings = {
                        "url": "/Base/AddCoachTime",
                        "method": "POST",
                        "timeout": 0,
                        "headers": {
                            "Content-Type": "application/json"
                        },
                        "data": JSON.stringify({ "CoachGuid": "", "BeginDate": bd, "EndDate": bd, "LeaderGuid": "", "Status": 0 }),
                    };

                    $.ajax(settings).done(function (data) {

                        $('#dvCategoryResults').empty();
                        $('#dvCategoryResults').html(data);
                        UpdateTime(date);

                    });

                }
                else {
                    alert("Не выбрано время");
                }




            });
        });

        $(".btn").click(function () {
            var fired_button = $(this).val();
            $("#time").val(fired_button);

        });</script>
}
